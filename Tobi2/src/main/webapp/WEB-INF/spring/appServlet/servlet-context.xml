<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- 임의의 컨트롤러를 빈으로 등록해줌. 이렇게 등록해줌으로써 PostController인 DispatcherServlet이 컨트롤러중에 선택할 수 있게 함. -->
	<beans:bean name="/hello" class="com.spring.mvc.hello.HelloController"></beans:bean>
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory 
		기본적인 뷰리졸버를 사용하여 prefix와 suffix를 지정해줌. 이렇게 함으로써 컨트롤러에서 완전경로를 지정해주지 않고 해당 jsp 파일의 이름만 반환하면 됨
		-->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- @Controller 어노테이션이 붙은 빈을 스캐닝할 범위를 지정 -->
	<context:component-scan base-package="com.spring.mvc" />
	
</beans:beans>
